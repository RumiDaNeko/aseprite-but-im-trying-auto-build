name: build-auto

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/build-auto.yml'
      - 'build.sh'
      - 'laf/**'

jobs:
  build-auto:
    name: Build Aseprite (${{ matrix.os }} - ${{ matrix.build_type }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        build_type: [RelWithDebInfo, Debug]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y \
            build-essential cmake ninja-build curl unzip git \
            libpixman-1-dev libfreetype6-dev libharfbuzz-dev zlib1g-dev \
            libx11-dev libxcursor-dev libxi-dev libxrandr-dev libgl1-mesa-dev \
            libfontconfig1-dev

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake ninja curl unzip

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install -y cmake ninja git unzip
          echo "$env:ProgramFiles\CMake\bin" >> $env:GITHUB_PATH

      - name: Prepare build script
        if: runner.os != 'Windows'
        run: chmod +x build.sh

      - name: Build Aseprite
        shell: bash
        env:
          BUILD_TYPE: ${{ matrix.build_type }}
        run: |
          echo "Starting build: $BUILD_TYPE"
          ./build.sh --auto --norun

      - name: Upload built binary
        uses: actions/upload-artifact@v4
        with:
          name: aseprite-${{ matrix.os }}-${{ matrix.build_type }}
          path: |
            **/bin/aseprite*
